title: Unnamed Python Task
description: |
  # Python Task Example

  This is basic Python task to get you started quickly with Code FREAK.

  To turn this into a useful programming exercise, you have to do the following.

  ## Provide Code to Students

  If you do not want your students to start completely from scratch, provide some scaffolding code. Look into `main.py` for some inspiration.

  ## Setup Automatic Evaluation

  This example comes with two pre-configured evaluation steps. You can see them in the _Evaluation_ tab. To try it out, enter _testing mode_ and start the evaluation.

  ### Static Code Analysis

  The code is anaylzed using [Pylint](https://pypi.org/project/pylint/) for proper formattingand possible issues.

  ### Unit Tests

  Unit tests are your main instrument for automatically validating your students' answers. To get started, look into `main_test.py` for example test cases.
  
  There are many unit testing frameworks for python. This example uses [`pytest`](https://pytest.org). See pytest's documentation how to write unit tests.

  ## Provide Instructions

  Click on this text to edit it. Here you describe to your students what they have to do.
hidden:
  - "**/*_test.py"
evaluation:
  unit-tests:
    title: Unit Tests
    script: |-
      pip3 install pytest
      pytest --junitxml=test-results/TEST-suite.xml main_test.py
    report:
      format: junit-xml
      path: test-results/TEST-*.xml
  code-quality:
    title: Code Quality
    script: |-
      pip3 install pylint
      touch __init__.py
      pylint --ignore-patterns='.*?_test.py' --output-format=json -ry $(pwd) > pylint-report.json
    report:
      format: pylint-json
      path: pylint-report.json
