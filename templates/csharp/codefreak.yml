title: Unnamed C# Task
description: |
  # C# Task Example

  This is basic C# task to get you started quickly with Code FREAK.

  To turn this into a useful programming exercise, you have to do the following.

  ## Provide Code to Students

  If you do not want your students to start completely from scratch, provide some scaffolding code. Look into `src/` for some inspiration.

  ## Setup Automatic Evaluation

  This example comes with two pre-configured evaluation steps. You can see them in the _Evaluation_ tab. To try it out, enter _testing mode_ and start the evaluation.

  ### Static Code Analysis

  The code is anaylzed using [dotnet-format](https://github.com/dotnet/format) for proper formatting.

  ### Unit Tests

  Unit tests are your main instrument for automatically validating your students' answers. To get started, look into `tests/` for example test cases.

  The standard testing framework for .NET is NUnit. Refer to the [official documentation](https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-nunit) for more information.

  ## Provide Instructions

  Click on this text to edit it. Here you describe to your students what they have to do.
hidden:
  - tests/**
protected:
  - AddFunction.sln
evaluation:
  unit-tests:
    title: Unit Tests
    script: |-
      export PATH="$PATH:$HOME/.dotnet:$HOME/.dotnet/tools"
      dotnet test tests/AddFunction.Tests/AddFunction.Tests.csproj --logger "junit;LogFilePath=TEST-report.xml"
    report:
      format: junit-xml
      path: tests/AddFunction.Tests/TEST-report.xml
  code-quality:
    title: Code Quality
    script: |-
      export PATH="$PATH:$HOME/.dotnet:$HOME/.dotnet/tools"
      dotnet tool install -g dotnet-format
      dotnet-format -v quiet --check 2> dotnet-format-report.txt
    report:
      format: visualstudio
      path: dotnet-format-report.txt
